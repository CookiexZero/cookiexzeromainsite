* {
    margin: 0; /* изначальные отступы */
    padding: 0; /* изначальные отступы */
    box-sizing: border-box; /* если установленно данное значение то все отступы включаются в размеры элемента */
}

body {
    font-family: Montserrat, sans-serif; /* устанавливаем шрифты */
    background-color: #121212; /* цвет фона */
    color: #ffffff; /* цвет текста */
    overflow-x: hidden; /* убирает горизонтальный скролл, делает все объекты за экраном недоступными */
    display: flex; /* активирует режим flexbox в котором дочерние элементы могут автоматически менять свои размеры и положение */
    flex-direction: column; /* меняет основную ось flexbox на вертикальную, распологая объекты в столбиу */
    min-height: 100vh; /* устанавливает минимальную высоту элемента(в данном случае 100vh, то есть 100% от видимого) */
}

/* убираем изменение курсора при наведении на текст */
body p, h1, h2, h3, h4, h5, h6 {
    cursor: context-menu;
}

header {
    display: flex; /* активирует режим flexbox в котором дочерние элементы могут автоматически менять свои размеры и положение */
    justify-content: space-between; /* распологает элементы вдоль главной оси flexbox, оставляя одинаковое расстояние между элементами, но прижимая крайние к краям контейнера */
    align-items: center; /* центрирует элементы внутри flexbox, относительно поперечной оси(в данном случае по вертикали) */
    padding: 15px; /* внутренний отступ элемента */
    background-color: rgba(18, 18, 18, 0.8); /* цвет фона */
    position: fixed; /* устанавливает позиционирование элемента относительно видимого окна */
    top: 0; /* отступ относительно верха экрана */
    left: 0; /* отступ относительно левой части экрана */
    width: 100%; /* ширина 100% */
    height: 60px; /* высота 60 пикселей */
    z-index: 1000; /* система слоев, чем больше значение относительно других элементов, тем больше приоритет отображения */
    backdrop-filter: blur(6px); /* контент под элементом будет заблюриваться на 6 пикселей */
}

.avatar {
    width: 50px; /* ширина 50 пикселей */
    height: 50px; /* высота 50 пикселей */
    border-radius: 50%; /* изменяет скругление углов объекта */
    transition: all 0.3s ease-in-out; /* настраивает плавность изменений, в данном случае все измениения прописанные в hover будут меняться за 0.3 секунды с одинаковой плавностью как в начале, так и в конце анимации*/
    border: 3px solid rgba(139, 12, 139, 0.7); /* Фиолетовая обводка вокруг аватарки */
    padding: 2px; /* Отступ между аватаркой и обводкой */
}

/* изменение размера элемента в 1.1 раза при наведении на него */
.avatar:hover {
    transform: scale(1.1);
}

nav a {
    margin-left: 20px; /* внешний отступ влево на 20 пикселей */
    text-decoration: none; /* в данном случае убирает подчеркивание ссылок */
    color: #ffffff; /* цвет текста */
    font-size: 16px; /* устанавливает размер текста(шрифта) */
}

/* изменение цвета текста при наведении */
nav a:hover {
    color: #ffffff;
}

/* изменение цвета текста для посещенных ссылок при наведении */
nav a:visited {
    color: #ffffff;
}

.rotated-square {
    width: 500px; /* ширина 500 пикселей */
    height: 500px; /* высота 500 пикселей */
    background-color: #800080; /* цвет фона эелемента */
    border-radius: 70px; /* изменяет скругление углов объекта */
    position: absolute; /* изменяет поведение положения элемента. теперь элемент будет позиционироваться относительно ближайшего родительского контейнера */
    top: 600px; /* смещение элемента вниз относительно верхней границы родительского контейнера */
    left: 80%; /* смещение элемента горизонтально относительно левой границы родительского контейнера */
    transform: rotate(25deg); /* поворачивает элемент на 25 градусов */
    transition: all 0.3s ease-in-out; /* настраивает плавность изменений, в данном случае все измениения прописанные в hover будут меняться за 0.3 секунды с одинаковой плавностью как в начале, так и в конце анимации*/
    box-shadow: 0 0 50px 20px rgba(128, 0, 128, 0.9); /* добавляет тень элементу */
}

/* поворачивает элемент на 30 градусов при наведении */
.rotated-square:hover {
    transform: rotate(30deg);
}

.rotated-avatar {
    width: 700px; /* ширина 700 пикселей */
    height: 700px; /* высота 700 пикселей */
    border-radius: 50%; /* изменяет скругление углов объекта */
    position: absolute; /* изменяет поведение положения элемента. теперь элемент будет позиционироваться относительно ближайшего родительского контейнера */
    top: 10%; /* смещение элемента вниз относительно верхней границы родительского контейнера */
    left: -300px; /* смещение элемента горизонтально относительно левой границы родительского контейнера */
    opacity: 0.1; /* изменяет прозрачнось элемента */
    transition: all 0.3s ease-in-out; /* настраивает плавность изменений, в данном случае все измениения прописанные в hover будут меняться за 0.3 секунды с одинаковой плавностью как в начале, так и в конце анимации*/
}

/* изменяем прозрачность и размер элемента при наведении */
.rotated-avatar:hover {
    opacity: 0.3;
    transform: scale(0.99);
}

.text-container {
    position: absolute; /* изменяет поведение положения элемента. теперь элемент будет позиционироваться относительно ближайшего родительского контейнера */
    top: 300px; /* смещение элемента вниз относительно верхней границы родительского контейнера */
    text-align: left; /* устанавливает выравнивание текста по левому краю */
    margin-left: 4%; /* внешний отступ влево на 4% от размеров родительского контейнера */
}

.title {
    font-size: 60px; /* устанавливает размер текста(шрифта) */
    font-weight: 800; /* устанавливает толщину текста(шрифта) */
    margin-bottom: 10px; /* внешний отступ вниз на 10 пикселей */
}

/* цвет посещенных ссылок белый */
.description a:visited {
    color: #ffffff;
}

.description {
    font-size: 16px; /* устанавливает размер текста(шрифта) */
}


.content {
    flex: 1; /* элемент будет занимать доступное пространство в ряду, растягиваясь для заполнения оставшегося места */
    padding-top: 60px; /* внутренний отступ сверху */
    padding-bottom: 80px; /* внутренний отступ снизу */
    text-align: left; /* устанавливает выравнивание текста по левому краю */
}


footer {
    color: #ffffff; /* цвет текста белый */
    padding-top: 20px; /* внутренний отступ сверху */
    padding-right: 20px; /* внутренний отступ справа */
    padding-bottom: 35px; /* внутренний отступ снизу */
    padding-left: 20px; /* внутренний отступ слева */
    position: relative; /* задаёт относительное позиционирование элемента, позволяя его смещение относительно его нормального положения, при этом он сохраняет место в потоке документа */
    bottom: 0; /* устанавливает нижнее положение элемента на нулевое расстояние от нижней границы его родительского контейнера */
    left: 0; /* устанавливает горизонтальное положение элемента на нулевое расстояние от левой границы его родительского контейнера */
    width: 100%; /* устанавливает ширину элемента равной 100% от ширины его родительского контейнера */
    display: flex; /* активирует режим flexbox в котором дочерние элементы могут автоматически менять свои размеры и положение */
    justify-content: space-between; /* распологает элементы вдоль главной оси flexbox, оставляя одинаковое расстояние между элементами, но прижимая крайние к краям контейнера */
    align-items: flex-end; /* выравнивает элементы по вертикали в конце оси поперечного направления в flexbox */
    z-index: 1000; /* система слоев, чем больше значение относительно других элементов, тем больше приоритет отображения */
}

.footer-content {
    display: flex; /* активирует режим flexbox в котором дочерние элементы могут автоматически менять свои размеры и положение */
    justify-content: flex-end; /*  выравнивает элементы по основной оси в контейнере Flexbox, перемещая их к правому краю контейнера */
    flex-grow: 1; /* позволяет элементу в flexbox увеличивать свою ширину или высоту для заполнения доступного пространства */
}

.footer-section {
    margin-left: 40px; /* внешний отступ на 40 пикселей */
}

.footer-section a {
    text-decoration: none; /* в данном случае убирает подчеркивание ссылок */
    color: #ffffff; /* белый цвет текста */
}

/* белый цвет для посещенных ссылок */
.footer-section a:visited {
    color: #ffffff;
}

/* белый цвет при наведении */
.footer-section a:hover {
    color: #ffffff; 
}

.footer-section h4 {
    margin-bottom: 10px; /* внешний отступ 10 пикселей */
}

.footer-section ul {
    list-style: none; /* убирает маркеры для списка */
    padding: 0; /* внутренный отступ со всех сторон 0 */
}

.footer-section li {
    margin: 5px 0; /* внешний отступ сверху и снизу по 5 пикселей, 0 по бокам */
}

.footer-description {
    margin-top: 20px; /* внешний отступ сверзу 20 пикселей */
    font-size: 12px; /* изменяет размер текста(шрифта) */
    text-align: left; /* устанавливает выравнивание текста по левому краю */
    color: #494949; /* изменяет цвет текста */
    position: absolute; /* изменяет поведение положения элемента. теперь элемент будет позиционироваться относительно ближайшего родительского контейнера */
    bottom: 15px; /* устанавливает нижнее положение элемента на нулевое расстояние от нижней границы его родительского контейнера */
    left: 20px; /* устанавливает горизонтальное положение элемента на нулевое расстояние от левой границы его родительского контейнера */
}

/* цвет текста для посещенных ссылок */
.footer-description a:visited {
    color: #494949;
}

/* цвет текста */
.footer-description a {
    color: #494949;
}

.star-container {
    display: flex; /* активирует режим flexbox в котором дочерние элементы могут автоматически менять свои размеры и положение */
    align-items: center; /* центрирует элементы внутри flexbox, относительно поперечной оси(в данном случае по вертикали) */
    margin-top: 50px; /* внешний отступ сверху 50 пикселей */
}

.text-container-star {
    position: absolute; /* изменяет поведение положения элемента. теперь элемент будет позиционироваться относительно ближайшего родительского контейнера */
    top: 740px; /* смещение элемента вниз относительно верхней границы родительского контейнера */
    right: 0; /* смещение элемента относительно правой границы родительского контейнера */
    text-align: right; /* устанавливает выравнивание текста по правому краю */
    margin-right: 4%; /* внешний отступ вправо на 4% от размеров родительского контейнера */
}

.title-star {
    font-size: 60px; /* изменяет размер текста(шрифта) */
    font-weight: 800; /* изменяет толщину текста(шрифта) */
    margin-bottom: 10px; /* внешний отступ 10 пикселей */
}

.description-star {
    font-size: 16px; /* изменяет размер текста(шрифта) */
}
.content2 {
    flex: 1; /* элемент будет занимать доступное пространство в ряду, растягиваясь для заполнения оставшегося места */
    padding-top: 60px; /* внутренний отступ сверху 60 пикселей */
    padding-bottom: 80px; /* внутренний отступ снизу 60 пикселей */
    text-align: left; /* устанавливает выравнивание текста по левому краю */
    margin-top: 550px; /* внешний отступ сверху 550 пикселей */
}
.rotated-avatar2 {
    position: relative; /* задаёт относительное позиционирование элемента, позволяя его смещение относительно его нормального положения, при этом он сохраняет место в потоке документа */
    top: 100px; /* смещение элемента вниз относительно верхней границы родительского контейнера */
}

.text3 {
    top: 1150px; /* смещение элемента вниз относительно верхней границы родительского контейнера */
}

.text3 a{
    color: #ffffff; /* цвет текста белый */
}

.button52 {
    display: inline-flex; /* также делает контейнет типа flexbox, но позволяет распологать другие элементы в той же строке, а не под контейнером как в обычном flex */
    background-color: #800080; /* цвет фона кнопки */
    border-radius: 20px; /* изменяет скругление углов объекта */
    box-shadow: 0 0 5px 2px rgba(128, 0, 128, 0.9); /* тень элемента */
    opacity: 1.0; /* устанавливает прозрачнось элемента */
    transition: all 0.2s ease-in-out; /* настраивает плавность изменений, в данном случае все измениения прописанные в hover будут меняться за 0.2 секунды с одинаковой плавностью как в начале, так и в конце анимации*/
    text-align: center; /* устанавливает выравнивание текста по центру */
    align-items: center; /* центрирует элементы внутри flexbox, относительно поперечной оси(в данном случае по вертикали) */
    padding: 10px 30px; /* внутренний отступ снизу и сверху по 10 пикселей, справа и слева по 30 пикселей */
    cursor: pointer; /* означает, что курсор станет "рукой", сигнализируя пользователю о том, что элемент интерактивен и на него можно нажать */
    font-size: 16px; /* изменяет размер текста(шрифта) */
    font-weight: 700; /* изменяет толщину текста(шрифта) */
    text-decoration: none; /* в данном случае убирает подчеркивание ссылок */
    color: #ffffff; /* цвет текста белый */
}

/* изменяет прозрачность, размер, цвет, и размер тени при наведении */
.button52:hover {
    opacity: 0.7; 
    transform: scale(0.98);
    color: #ffffff;
    box-shadow: 0 0 15px 4px rgba(128, 0, 128, 0.9);
}

/* изменение цвета текста для посещенных ссылок при наведении */
.button52:visited {
    color: #ffffff;
}

.description, .title, .text-container-star {
    width: 500px; /* ширина 500 пикселей */
}

.error_msg {
    position: absolute; /* изменяет поведение положения элемента. теперь элемент будет позиционироваться относительно ближайшего родительского контейнера */
    display: flex; /* активирует режим flexbox в котором дочерние элементы могут автоматически менять свои размеры и положение */
    justify-content: center; /* выравнивает дочерние элементы контейнера Flexbox по центру по основной оси */
    align-items: center; /* центрирует элементы внутри flexbox, относительно поперечной оси(в данном случае по вертикали) */
    text-align: center; /* устанавливает выравнивание текста по центру */
    flex-wrap: wrap; /* позволяет элементам внутри Flexbox-контейнера переноситься на новую строку или столбец, если они не помещаются в один ряд */
    top: 25%; /* смещает элемент на 25% от верхней границы его ближайшего родительского контейнера */
    left: 50%; /* смещает элемент на 50% от левой границы его ближайшего родительского контейнера */
    transform: translateX(-50%); /* смещает элемент по оси X (горизонтально) на 50% влево от его текущего положения */
    width: 100%; /* устанавливает ширину элемента равной 100% от ширины его родительского контейнера */
    max-width: 500px; /* устанавливает максимальную ширину контейнера */
}

.error_img img{
    width: 250px; /* ширина элемента 250 пикселей */
}

.error_text h3, p{
    margin-bottom: 10px; /* внешний отступ снизу 10 пикселей */
}

.error_button {
    margin-top: 10px; /* внешний отступ сверху 10 пикселей */
}

.questions-block {
    display: flex; /* активирует режим flexbox в котором дочерние элементы могут автоматически менять свои размеры и положение */
    flex: 1; /* элемент будет занимать доступное пространство в ряду, растягиваясь для заполнения оставшегося места */
    justify-content: center; /* выравнивает дочерние элементы контейнера Flexbox по центру по основной оси */
    align-items: center; /* центрирует элементы внутри flexbox, относительно поперечной оси(в данном случае по вертикали) */
    flex-direction: column; /* меняет направление оси, по которой выстраиваются элементы, с горизонтальной (по умолчанию) на вертикальную */
    margin-top: 100px; 
    margin-bottom: 50px;
    padding-left: 150px;
    padding-right: 150px;
    /* устал писать, это внутренние отступы контейнера */
}

.question {
    background-color: #800080; /* цвет фона элемента */
    position: relative; /* задаёт относительное позиционирование элемента, позволяя его смещение относительно его нормального положения, при этом он сохраняет место в потоке документа */
    width: 100%; /* устанавливает ширину элемента равной 100% от ширины его родительского контейнера */
    max-width: 2000px; /* устанавливает максимальную ширину контейнера */
    height: auto; /* автоматически устанавливает высоту контейнера относительно ширины */
    border-radius: 20px; /* изменяет скругление углов объекта */
    transition: all 0.3s ease-in-out; /* настраивает плавность изменений, в данном случае все измениения прописанные в hover будут меняться за 0.3 секунды с одинаковой плавностью как в начале, так и в конце анимации*/
    box-shadow: 0 0 10px 2px rgba(128, 0, 128, 0.9); /* тень */
    cursor: pointer; /* означает, что курсор станет "рукой", сигнализируя пользователю о том, что элемент интерактивен и на него можно нажать */
    margin-top: 30px; /* верхний внешний отступ 30 пикселей */
}

.question p {
    font-size: 28px;
    font-weight: 700;
    text-align: left;
    padding-left: 25px;
    padding-top: 23px;
    padding-bottom: 12.6px;
    padding-right: 25px;
    width: 700px;
    cursor: pointer;
}

.question:hover {
    opacity: 0.7;
    transform: scale(0.98);
}

.q1 {
    display: flex;
    justify-content: space-between;
    flex-grow: 1;
    cursor: pointer;
}

.q1 img {
    margin-right: 25px;
    margin-top: 23px;
    cursor: pointer;
    height: 35px;
}

.question.active {
    height: 100%;
    max-width: 2000px;
    background-color: #121212;
    box-shadow: 0 0 15px 4px rgba(128, 0, 128, 0.9);
}


.question img {
    transition: all 0.3s ease-in-out;
    transform-origin: center;
}

.question.active img {
    transform: rotate(180deg);
}

.a1 {
    justify-content: space-between;
    flex-grow: 1;
    cursor: pointer;
    display: none;
    transition: all 0.3s ease-in-out;
}

.a1 p {
    transition: all 0.3s ease-in-out;
    font-size: 18px;
    font-weight: 500;
    width: 100%;
    padding-top: 0px;
}

.a1.active {
    display: flex;
}

.a1.active p {
    max-height: 100%;
}

.faq-description {
    font-size: 38px;
    font-weight: 800;
}